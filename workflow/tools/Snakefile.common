configfile: "config/config.yaml"

from snakemake_tools import create_parameters, create_conditions, calculate_memory_resource as mem_res, branch_match

subjects 	= config["branch_opts"]["subjects"]
subject_dates	= ["_".join([subject_id,date]) for subject_id,dates in subjects.items() for date in dates ]

parcells_conf	= config["branch_opts"]["parcellations"]
parcells_static	= config["static_params"]["parcellations"]
parcellations	= create_parameters( parcells_conf, parcells_static )

selected_trials	= config["branch_opts"]["selected_trials"]

conditions	= config["branch_opts"]["conditions"]
trial_conditions, phase_conditions, default_conditions = create_conditions(conditions, config)

feature_conf	= config["branch_opts"]["features"]
feature_static	= config["static_params"]["features"]
features	= create_parameters( feature_conf, feature_static )

rfe_ns		= config["branch_opts"]["rfe"]["selected_features_n"]

decoder_conf	= config["branch_opts"]["decoders"]
decoder_static	= config["static_params"]["decoders"]
decoders	= create_parameters( decoder_conf, decoder_static )

#For annotating plots
plot_subject_labels = {f"{subject_id}(#{len(dates)})" for subject_id,dates in subjects.items()}
#plot_feature_labels = [f"{feat_name} t={options['timelags']}" if 'timelags' in options else feat_name for feat_name,options in feature_conf.items()]

wildcard_constraints:
	subject_dates	= r"[a-zA-Z\d_-]+",
	parcellation	= branch_match(config["branch_opts"]["parcellations"].keys()),
	trials		= branch_match(config["branch_opts"]["selected_trials"].keys()),
	cond		= branch_match(config["branch_opts"]["conditions"].keys()),
	feature		= branch_match(config["branch_opts"]["features"].keys()),
	decoder		= branch_match(config["branch_opts"]["decoders"].keys()),

TRIALS_DIR = r"results/{subject_dates}/{parcellation}/{trials}"
